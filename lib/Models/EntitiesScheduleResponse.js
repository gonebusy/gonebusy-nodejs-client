/**
 * gonebusy
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of EntitiesScheduleResponse
 */
class EntitiesScheduleResponse extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.ownerId = this.constructor.getValue(obj.ownerId || obj.owner_id);
        this.resourceId = this.constructor.getValue(obj.resourceId || obj.resource_id);
        this.serviceId = this.constructor.getValue(obj.serviceId || obj.service_id);
        this.timeWindows = this.constructor.getValue(obj.timeWindows || obj.time_windows);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'ownerId', realName: 'owner_id' },
            { name: 'resourceId', realName: 'resource_id' },
            { name: 'serviceId', realName: 'service_id' },
            {
                name: 'timeWindows',
                realName: 'time_windows',
                array: true,
                type: 'EntitiesTimeWindowResponse',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = EntitiesScheduleResponse;
