/**
 * gonebusy
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of CreateScheduleBody
 */
class CreateScheduleBody extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.serviceId = this.constructor.getValue(obj.serviceId || obj.service_id);
        this.userId = this.constructor.getValue(obj.userId || obj.user_id);
        this.resourceId = this.constructor.getValue(obj.resourceId || obj.resource_id);
        this.startDate = this.constructor.getValue(obj.startDate || obj.start_date);
        this.endDate = this.constructor.getValue(obj.endDate || obj.end_date);
        this.startTime = this.constructor.getValue(obj.startTime || obj.start_time);
        this.endTime = this.constructor.getValue(obj.endTime || obj.end_time);
        this.totalMinutes = this.constructor.getValue(obj.totalMinutes || obj.total_minutes);
        this.days = this.constructor.getValue(obj.days);
        this.recursBy = this.constructor.getValue(obj.recursBy || obj.recurs_by);
        this.frequency = this.constructor.getValue(obj.frequency);
        this.occurrence = this.constructor.getValue(obj.occurrence);
        this.dateRecursBy = this.constructor.getValue(obj.dateRecursBy || obj.date_recurs_by);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'serviceId', realName: 'service_id' },
            { name: 'userId', realName: 'user_id' },
            { name: 'resourceId', realName: 'resource_id' },
            { name: 'startDate', realName: 'start_date', isDateTime: true },
            { name: 'endDate', realName: 'end_date', isDateTime: true },
            { name: 'startTime', realName: 'start_time' },
            { name: 'endTime', realName: 'end_time' },
            { name: 'totalMinutes', realName: 'total_minutes' },
            { name: 'days', realName: 'days' },
            { name: 'recursBy', realName: 'recurs_by' },
            { name: 'frequency', realName: 'frequency' },
            { name: 'occurrence', realName: 'occurrence' },
            { name: 'dateRecursBy', realName: 'date_recurs_by' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = CreateScheduleBody;
